@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Builder
@using System.Threading
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject IOptions<RequestLocalizationOptions> LocalizationOptions
@{
    var cultureItems = LocalizationOptions.Value.SupportedUICultures!
        .Select(c => new { Value = c.Name, Text = c.NativeName }).ToList();
}

<li class="nav-item dropdown">
    <a class="nav-link text-white dropdown-toggle" href="javascript:{}" id="navbarLangDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false" style="background-color: black; border: 2px solid #679f67; padding: 10px; border-radius: 10px;">
        Language (@Thread.CurrentThread.CurrentUICulture.Name)
    </a>
    <div class="dropdown-menu" aria-labelledby="navbarLangDropdown" style="background-color: black; border: 2px solid #679f67;">
        @foreach (var item in cultureItems)
        {
            if (Thread.CurrentThread.CurrentUICulture.Name == item.Value)
            {
                <strong>
                    <a class="dropdown-item text-white"
                       asp-area="" asp-controller="Home" asp-action="SetLanguage" asp-route-culture="@item.Value"
                       asp-route-returnUrl="@Context.Request.Path@Context.Request.QueryString">
                        @item.Text
                    </a>
                </strong>
            }
            else
            {
                <a class="dropdown-item text-white"
                   asp-area="" asp-controller="Home" asp-action="SetLanguage" asp-route-culture="@item.Value"
                   asp-route-returnUrl="@Context.Request.Path@Context.Request.QueryString">
                    @item.Text
                </a>
            }
        }
    </div>
</li>

<style>
    /* Dropdown menu items hover effect */
    .dropdown-menu .dropdown-item:hover {
        background-color: #333; /* Darker gray to keep contrast */
    }
</style>
